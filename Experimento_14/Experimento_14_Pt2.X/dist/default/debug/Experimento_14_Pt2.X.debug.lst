

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Sat Apr 19 17:44:00 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
     7                           	dabs	1,0x7E,2
     8     0000                     
     9                           ; Generated 12/10/2023 GMT
    10                           ; 
    11                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    12                           ; All rights reserved.
    13                           ; 
    14                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    15                           ; 
    16                           ; Redistribution and use in source and binary forms, with or without modification, are
    17                           ; permitted provided that the following conditions are met:
    18                           ; 
    19                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    20                           ;        conditions and the following disclaimer.
    21                           ; 
    22                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    23                           ;        of conditions and the following disclaimer in the documentation and/or other
    24                           ;        materials provided with the distribution. Publication is not required when
    25                           ;        this file is used in an embedded application.
    26                           ; 
    27                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    28                           ;        software without specific prior written permission.
    29                           ; 
    30                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    31                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    32                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    33                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    34                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    35                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    36                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    37                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    38                           ; 
    39                           ; 
    40                           ; Code-generator required, PIC16F887 Definitions
    41                           ; 
    42                           ; SFR Addresses
    43     0004                     fsr             equ	4
    44     0004                     fsr0            equ	4
    45     0000                     indf            equ	0
    46     0000                     indf0           equ	0
    47     0002                     pc              equ	2
    48     0002                     pcl             equ	2
    49     000A                     pclath          equ	10
    50     0003                     status          equ	3
    51     0000                     INDF            equ	0	;# 
    52     0001                     TMR0            equ	1	;# 
    53     0002                     PCL             equ	2	;# 
    54     0003                     STATUS          equ	3	;# 
    55     0004                     FSR             equ	4	;# 
    56     0005                     PORTA           equ	5	;# 
    57     0006                     PORTB           equ	6	;# 
    58     0007                     PORTC           equ	7	;# 
    59     0008                     PORTD           equ	8	;# 
    60     0009                     PORTE           equ	9	;# 
    61     000A                     PCLATH          equ	10	;# 
    62     000B                     INTCON          equ	11	;# 
    63     000C                     PIR1            equ	12	;# 
    64     000D                     PIR2            equ	13	;# 
    65     000E                     TMR1            equ	14	;# 
    66     000E                     TMR1L           equ	14	;# 
    67     000F                     TMR1H           equ	15	;# 
    68     0010                     T1CON           equ	16	;# 
    69     0011                     TMR2            equ	17	;# 
    70     0012                     T2CON           equ	18	;# 
    71     0013                     SSPBUF          equ	19	;# 
    72     0014                     SSPCON          equ	20	;# 
    73     0015                     CCPR1           equ	21	;# 
    74     0015                     CCPR1L          equ	21	;# 
    75     0016                     CCPR1H          equ	22	;# 
    76     0017                     CCP1CON         equ	23	;# 
    77     0018                     RCSTA           equ	24	;# 
    78     0019                     TXREG           equ	25	;# 
    79     001A                     RCREG           equ	26	;# 
    80     001B                     CCPR2           equ	27	;# 
    81     001B                     CCPR2L          equ	27	;# 
    82     001C                     CCPR2H          equ	28	;# 
    83     001D                     CCP2CON         equ	29	;# 
    84     001E                     ADRESH          equ	30	;# 
    85     001F                     ADCON0          equ	31	;# 
    86     0081                     OPTION_REG      equ	129	;# 
    87     0085                     TRISA           equ	133	;# 
    88     0086                     TRISB           equ	134	;# 
    89     0087                     TRISC           equ	135	;# 
    90     0088                     TRISD           equ	136	;# 
    91     0089                     TRISE           equ	137	;# 
    92     008C                     PIE1            equ	140	;# 
    93     008D                     PIE2            equ	141	;# 
    94     008E                     PCON            equ	142	;# 
    95     008F                     OSCCON          equ	143	;# 
    96     0090                     OSCTUNE         equ	144	;# 
    97     0091                     SSPCON2         equ	145	;# 
    98     0092                     PR2             equ	146	;# 
    99     0093                     SSPADD          equ	147	;# 
   100     0093                     SSPMSK          equ	147	;# 
   101     0093                     MSK             equ	147	;# 
   102     0094                     SSPSTAT         equ	148	;# 
   103     0095                     WPUB            equ	149	;# 
   104     0096                     IOCB            equ	150	;# 
   105     0097                     VRCON           equ	151	;# 
   106     0098                     TXSTA           equ	152	;# 
   107     0099                     SPBRG           equ	153	;# 
   108     009A                     SPBRGH          equ	154	;# 
   109     009B                     PWM1CON         equ	155	;# 
   110     009C                     ECCPAS          equ	156	;# 
   111     009D                     PSTRCON         equ	157	;# 
   112     009E                     ADRESL          equ	158	;# 
   113     009F                     ADCON1          equ	159	;# 
   114     0105                     WDTCON          equ	261	;# 
   115     0107                     CM1CON0         equ	263	;# 
   116     0108                     CM2CON0         equ	264	;# 
   117     0109                     CM2CON1         equ	265	;# 
   118     010C                     EEDATA          equ	268	;# 
   119     010C                     EEDAT           equ	268	;# 
   120     010D                     EEADR           equ	269	;# 
   121     010E                     EEDATH          equ	270	;# 
   122     010F                     EEADRH          equ	271	;# 
   123     0185                     SRCON           equ	389	;# 
   124     0187                     BAUDCTL         equ	391	;# 
   125     0188                     ANSEL           equ	392	;# 
   126     0189                     ANSELH          equ	393	;# 
   127     018C                     EECON1          equ	396	;# 
   128     018D                     EECON2          equ	397	;# 
   129     0000                     INDF            equ	0	;# 
   130     0001                     TMR0            equ	1	;# 
   131     0002                     PCL             equ	2	;# 
   132     0003                     STATUS          equ	3	;# 
   133     0004                     FSR             equ	4	;# 
   134     0005                     PORTA           equ	5	;# 
   135     0006                     PORTB           equ	6	;# 
   136     0007                     PORTC           equ	7	;# 
   137     0008                     PORTD           equ	8	;# 
   138     0009                     PORTE           equ	9	;# 
   139     000A                     PCLATH          equ	10	;# 
   140     000B                     INTCON          equ	11	;# 
   141     000C                     PIR1            equ	12	;# 
   142     000D                     PIR2            equ	13	;# 
   143     000E                     TMR1            equ	14	;# 
   144     000E                     TMR1L           equ	14	;# 
   145     000F                     TMR1H           equ	15	;# 
   146     0010                     T1CON           equ	16	;# 
   147     0011                     TMR2            equ	17	;# 
   148     0012                     T2CON           equ	18	;# 
   149     0013                     SSPBUF          equ	19	;# 
   150     0014                     SSPCON          equ	20	;# 
   151     0015                     CCPR1           equ	21	;# 
   152     0015                     CCPR1L          equ	21	;# 
   153     0016                     CCPR1H          equ	22	;# 
   154     0017                     CCP1CON         equ	23	;# 
   155     0018                     RCSTA           equ	24	;# 
   156     0019                     TXREG           equ	25	;# 
   157     001A                     RCREG           equ	26	;# 
   158     001B                     CCPR2           equ	27	;# 
   159     001B                     CCPR2L          equ	27	;# 
   160     001C                     CCPR2H          equ	28	;# 
   161     001D                     CCP2CON         equ	29	;# 
   162     001E                     ADRESH          equ	30	;# 
   163     001F                     ADCON0          equ	31	;# 
   164     0081                     OPTION_REG      equ	129	;# 
   165     0085                     TRISA           equ	133	;# 
   166     0086                     TRISB           equ	134	;# 
   167     0087                     TRISC           equ	135	;# 
   168     0088                     TRISD           equ	136	;# 
   169     0089                     TRISE           equ	137	;# 
   170     008C                     PIE1            equ	140	;# 
   171     008D                     PIE2            equ	141	;# 
   172     008E                     PCON            equ	142	;# 
   173     008F                     OSCCON          equ	143	;# 
   174     0090                     OSCTUNE         equ	144	;# 
   175     0091                     SSPCON2         equ	145	;# 
   176     0092                     PR2             equ	146	;# 
   177     0093                     SSPADD          equ	147	;# 
   178     0093                     SSPMSK          equ	147	;# 
   179     0093                     MSK             equ	147	;# 
   180     0094                     SSPSTAT         equ	148	;# 
   181     0095                     WPUB            equ	149	;# 
   182     0096                     IOCB            equ	150	;# 
   183     0097                     VRCON           equ	151	;# 
   184     0098                     TXSTA           equ	152	;# 
   185     0099                     SPBRG           equ	153	;# 
   186     009A                     SPBRGH          equ	154	;# 
   187     009B                     PWM1CON         equ	155	;# 
   188     009C                     ECCPAS          equ	156	;# 
   189     009D                     PSTRCON         equ	157	;# 
   190     009E                     ADRESL          equ	158	;# 
   191     009F                     ADCON1          equ	159	;# 
   192     0105                     WDTCON          equ	261	;# 
   193     0107                     CM1CON0         equ	263	;# 
   194     0108                     CM2CON0         equ	264	;# 
   195     0109                     CM2CON1         equ	265	;# 
   196     010C                     EEDATA          equ	268	;# 
   197     010C                     EEDAT           equ	268	;# 
   198     010D                     EEADR           equ	269	;# 
   199     010E                     EEDATH          equ	270	;# 
   200     010F                     EEADRH          equ	271	;# 
   201     0185                     SRCON           equ	389	;# 
   202     0187                     BAUDCTL         equ	391	;# 
   203     0188                     ANSEL           equ	392	;# 
   204     0189                     ANSELH          equ	393	;# 
   205     018C                     EECON1          equ	396	;# 
   206     018D                     EECON2          equ	397	;# 
   207     001D                     _CCP2CONbits    set	29
   208     001B                     _CCPR2L         set	27
   209     001D                     _CCP2CON        set	29
   210     0012                     _T2CON          set	18
   211     0007                     _PORTC          set	7
   212     0092                     _PR2            set	146
   213     0087                     _TRISC          set	135
   214                           
   215                           	psect	cinit
   216     07FC                     start_initialization:	
   217                           ; #config settings
   218                           
   219     07FC                     __initialization:
   220     07FC                     end_of_initialization:	
   221                           ;End of C runtime variable initialization code
   222                           
   223     07FC                     __end_of__initialization:
   224     07FC  0183               	clrf	3
   225     07FD  120A  118A  2F92   	ljmp	_main	;jump to C main() function
   226                           
   227                           	psect	cstackCOMMON
   228     0070                     __pcstackCOMMON:
   229     0070                     ?_main:
   230     0070                     ??_main:	
   231                           ; 1 bytes @ 0x0
   232                           
   233                           
   234                           ; 1 bytes @ 0x0
   235     0070                     	ds	2
   236     0072                     main@DutyCycle:
   237                           
   238                           ; 2 bytes @ 0x2
   239     0072                     	ds	2
   240                           
   241                           	psect	maintext
   242     0792                     __pmaintext:	
   243 ;;
   244 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   245 ;;
   246 ;; *************** function _main *****************
   247 ;; Defined at:
   248 ;;		line 10 in file "Pt2.c"
   249 ;; Parameters:    Size  Location     Type
   250 ;;		None
   251 ;; Auto vars:     Size  Location     Type
   252 ;;  DutyCycle       2    2[COMMON] unsigned int 
   253 ;; Return value:  Size  Location     Type
   254 ;;                  1    wreg      void 
   255 ;; Registers used:
   256 ;;		wreg, status,2, status,0
   257 ;; Tracked objects:
   258 ;;		On entry : B00/0
   259 ;;		On exit  : 0/0
   260 ;;		Unchanged: 0/0
   261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   262 ;;      Params:         0       0       0       0       0
   263 ;;      Locals:         2       0       0       0       0
   264 ;;      Temps:          2       0       0       0       0
   265 ;;      Totals:         4       0       0       0       0
   266 ;;Total ram usage:        4 bytes
   267 ;; This function calls:
   268 ;;		Nothing
   269 ;; This function is called by:
   270 ;;		Startup code after reset
   271 ;; This function uses a non-reentrant model
   272 ;;
   273                           
   274     0792                     _main:	
   275                           ;psect for function _main
   276                           
   277     0792                     l571:	
   278                           ;incstack = 0
   279                           ; Regs used in _main: [wreg+status,2+status,0]
   280                           
   281                           
   282                           ;Pt2.c: 12:     unsigned int DutyCycle = 0;
   283     0792  01F2               	clrf	main@DutyCycle
   284     0793  01F3               	clrf	main@DutyCycle+1
   285                           
   286                           ;Pt2.c: 14:     TRISC = 0b00000000;
   287     0794  1683               	bsf	3,5	;RP0=1, select bank1
   288     0795  1303               	bcf	3,6	;RP1=0, select bank1
   289     0796  0187               	clrf	7	;volatile
   290                           
   291                           ;Pt2.c: 15:     PORTC = 0b00000000;
   292     0797  1283               	bcf	3,5	;RP0=0, select bank0
   293     0798  1303               	bcf	3,6	;RP1=0, select bank0
   294     0799  0187               	clrf	7	;volatile
   295     079A                     l573:
   296                           
   297                           ;Pt2.c: 18:     PR2 = 0x3F;
   298     079A  303F               	movlw	63
   299     079B  1683               	bsf	3,5	;RP0=1, select bank1
   300     079C  1303               	bcf	3,6	;RP1=0, select bank1
   301     079D  0092               	movwf	18	;volatile
   302     079E                     l575:
   303                           
   304                           ;Pt2.c: 22:     T2CON = 0b00000100;
   305     079E  3004               	movlw	4
   306     079F  1283               	bcf	3,5	;RP0=0, select bank0
   307     07A0  1303               	bcf	3,6	;RP1=0, select bank0
   308     07A1  0092               	movwf	18	;volatile
   309     07A2                     l577:
   310                           
   311                           ;Pt2.c: 25:     CCP2CON = 0x0F;
   312     07A2  300F               	movlw	15
   313     07A3  009D               	movwf	29	;volatile
   314     07A4  2FEF               	goto	l595
   315     07A5                     l579:
   316                           
   317                           ;Pt2.c: 29:         {;Pt2.c: 31:             CCPR2L = (DutyCycle >> 2);
   318     07A5  0873               	movf	main@DutyCycle+1,w
   319     07A6  00F1               	movwf	??_main+1
   320     07A7  0872               	movf	main@DutyCycle,w
   321     07A8  00F0               	movwf	??_main
   322     07A9  1003               	clrc
   323     07AA  0CF1               	rrf	??_main+1,f
   324     07AB  0CF0               	rrf	??_main,f
   325     07AC  1003               	clrc
   326     07AD  0CF1               	rrf	??_main+1,f
   327     07AE  0CF0               	rrf	??_main,f
   328     07AF  0870               	movf	??_main,w
   329     07B0  1283               	bcf	3,5	;RP0=0, select bank0
   330     07B1  1303               	bcf	3,6	;RP1=0, select bank0
   331     07B2  009B               	movwf	27	;volatile
   332                           
   333                           ;Pt2.c: 34:             CCP2CONbits.CCP2Y = DutyCycle & 0x01;
   334     07B3  0872               	movf	main@DutyCycle,w
   335     07B4  3901               	andlw	1
   336     07B5  00F0               	movwf	??_main
   337     07B6  0EF0               	swapf	??_main,f
   338     07B7  081D               	movf	29,w	;volatile
   339     07B8  0670               	xorwf	??_main,w
   340     07B9  39EF               	andlw	-17
   341     07BA  0670               	xorwf	??_main,w
   342     07BB  009D               	movwf	29	;volatile
   343                           
   344                           ;Pt2.c: 35:             CCP2CONbits.CCP2X = DutyCycle & 0x02;
   345     07BC  0872               	movf	main@DutyCycle,w
   346     07BD  3902               	andlw	2
   347     07BE  00F0               	movwf	??_main
   348     07BF  0EF0               	swapf	??_main,f
   349     07C0  0DF0               	rlf	??_main,f
   350     07C1  081D               	movf	29,w	;volatile
   351     07C2  0670               	xorwf	??_main,w
   352     07C3  39DF               	andlw	-33
   353     07C4  0670               	xorwf	??_main,w
   354     07C5  009D               	movwf	29	;volatile
   355     07C6                     l581:
   356                           
   357                           ;Pt2.c: 37:             _delay((unsigned long)((10000)*(4000000/4000000.0)));
   358     07C6  300D               	movlw	13
   359     07C7  00F1               	movwf	??_main+1
   360     07C8  30FB               	movlw	251
   361     07C9  00F0               	movwf	??_main
   362     07CA                     u37:
   363     07CA  0BF0               	decfsz	??_main,f
   364     07CB  2FCA               	goto	u37
   365     07CC  0BF1               	decfsz	??_main+1,f
   366     07CD  2FCA               	goto	u37
   367     07CE  2FCF               	nop2
   368     07CF                     l583:
   369                           
   370                           ;Pt2.c: 38:             DutyCycle = DutyCycle + 5;
   371     07CF  0872               	movf	main@DutyCycle,w
   372     07D0  3E05               	addlw	5
   373     07D1  00F2               	movwf	main@DutyCycle
   374     07D2  0873               	movf	main@DutyCycle+1,w
   375     07D3  1803               	skipnc
   376     07D4  3E01               	addlw	1
   377     07D5  3E00               	addlw	0
   378     07D6  00F3               	movwf	main@DutyCycle+1
   379                           
   380                           ;Pt2.c: 40:             if (DutyCycle > 1023)
   381     07D7  3004               	movlw	4
   382     07D8  0273               	subwf	main@DutyCycle+1,w
   383     07D9  3000               	movlw	0
   384     07DA  1903               	skipnz
   385     07DB  0272               	subwf	main@DutyCycle,w
   386     07DC  1C03               	skipc
   387     07DD  2FDF               	goto	u11
   388     07DE  2FE0               	goto	u10
   389     07DF                     u11:
   390     07DF  2FEF               	goto	l595
   391     07E0                     u10:
   392     07E0                     l585:
   393                           
   394                           ;Pt2.c: 41:             {;Pt2.c: 42:                 DutyCycle = 0;
   395     07E0  01F2               	clrf	main@DutyCycle
   396     07E1  01F3               	clrf	main@DutyCycle+1
   397     07E2                     l587:
   398                           
   399                           ;Pt2.c: 43:                 CCPR2L = (DutyCycle >> 2);
   400     07E2  1283               	bcf	3,5	;RP0=0, select bank0
   401     07E3  1303               	bcf	3,6	;RP1=0, select bank0
   402     07E4  019B               	clrf	27	;volatile
   403     07E5                     l589:
   404                           
   405                           ;Pt2.c: 46:                 CCP2CONbits.CCP2Y = DutyCycle & 0x01;
   406     07E5  121D               	bcf	29,4	;volatile
   407     07E6                     l591:
   408                           
   409                           ;Pt2.c: 47:                 CCP2CONbits.CCP2X = DutyCycle & 0x02;
   410     07E6  129D               	bcf	29,5	;volatile
   411     07E7                     l593:
   412                           
   413                           ;Pt2.c: 49:                 _delay((unsigned long)((5000)*(4000000/4000000.0)));
   414     07E7  3007               	movlw	7
   415     07E8  00F1               	movwf	??_main+1
   416     07E9  307D               	movlw	125
   417     07EA  00F0               	movwf	??_main
   418     07EB                     u47:
   419     07EB  0BF0               	decfsz	??_main,f
   420     07EC  2FEB               	goto	u47
   421     07ED  0BF1               	decfsz	??_main+1,f
   422     07EE  2FEB               	goto	u47
   423     07EF                     l595:
   424                           
   425                           ;Pt2.c: 28:         while (DutyCycle < 1023)
   426     07EF  3003               	movlw	3
   427     07F0  0273               	subwf	main@DutyCycle+1,w
   428     07F1  30FF               	movlw	255
   429     07F2  1903               	skipnz
   430     07F3  0272               	subwf	main@DutyCycle,w
   431     07F4  1C03               	skipc
   432     07F5  2FF7               	goto	u21
   433     07F6  2FF8               	goto	u20
   434     07F7                     u21:
   435     07F7  2FA5               	goto	l579
   436     07F8                     u20:
   437     07F8  2FEF               	goto	l595
   438     07F9  120A  118A  2800   	ljmp	start
   439     07FC                     __end_of_main:
   440     0002                     ___latbits      equ	2
   441     007E                     btemp           set	126	;btemp
   442     007E                     wtemp0          set	126

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       4
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     135
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            96      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              14      4       4     28.6%
BANK0               80      0       0      0.0%
BANK1               80      0       0      0.0%
BANK3               96      0       0      0.0%
BANK2               96      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0       4      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Sat Apr 19 17:44:00 2025

                     u10 07E0                       u11 07DF                       u20 07F8  
                     u21 07F7                       u37 07CA                       u47 07EB  
                    l571 0792                      l581 07C6                      l573 079A  
                    l591 07E6                      l583 07CF                      l575 079E  
                    l593 07E7                      l585 07E0                      l577 07A2  
                    l587 07E2                      l579 07A5                      l595 07EF  
                    l589 07E5                      _PR2 0092                     _main 0792  
                   btemp 007E            main@DutyCycle 0072                     start 0000  
                  ?_main 0070                    _T2CON 0012                    _PORTC 0007  
                  _TRISC 0087                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_main 07FC                   ??_main 0070  
                 _CCPR2L 001B  __end_of__initialization 07FC           __pcstackCOMMON 0070  
             __pmaintext 0792                  _CCP2CON 001D     end_of_initialization 07FC  
            _CCP2CONbits 001D      start_initialization 07FC                ___latbits 0002  
