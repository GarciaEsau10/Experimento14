

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Sat Apr 19 17:41:44 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
     7                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
     8                           	dabs	1,0x7E,2
     9     0000                     
    10                           ; Generated 12/10/2023 GMT
    11                           ; 
    12                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    13                           ; All rights reserved.
    14                           ; 
    15                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    16                           ; 
    17                           ; Redistribution and use in source and binary forms, with or without modification, are
    18                           ; permitted provided that the following conditions are met:
    19                           ; 
    20                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    21                           ;        conditions and the following disclaimer.
    22                           ; 
    23                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    24                           ;        of conditions and the following disclaimer in the documentation and/or other
    25                           ;        materials provided with the distribution. Publication is not required when
    26                           ;        this file is used in an embedded application.
    27                           ; 
    28                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    29                           ;        software without specific prior written permission.
    30                           ; 
    31                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    32                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    33                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    34                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    35                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    36                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    37                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    38                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    39                           ; 
    40                           ; 
    41                           ; Code-generator required, PIC16F887 Definitions
    42                           ; 
    43                           ; SFR Addresses
    44     0004                     fsr             equ	4
    45     0004                     fsr0            equ	4
    46     0000                     indf            equ	0
    47     0000                     indf0           equ	0
    48     0002                     pc              equ	2
    49     0002                     pcl             equ	2
    50     000A                     pclath          equ	10
    51     0003                     status          equ	3
    52     0000                     INDF            equ	0	;# 
    53     0001                     TMR0            equ	1	;# 
    54     0002                     PCL             equ	2	;# 
    55     0003                     STATUS          equ	3	;# 
    56     0004                     FSR             equ	4	;# 
    57     0005                     PORTA           equ	5	;# 
    58     0006                     PORTB           equ	6	;# 
    59     0007                     PORTC           equ	7	;# 
    60     0008                     PORTD           equ	8	;# 
    61     0009                     PORTE           equ	9	;# 
    62     000A                     PCLATH          equ	10	;# 
    63     000B                     INTCON          equ	11	;# 
    64     000C                     PIR1            equ	12	;# 
    65     000D                     PIR2            equ	13	;# 
    66     000E                     TMR1            equ	14	;# 
    67     000E                     TMR1L           equ	14	;# 
    68     000F                     TMR1H           equ	15	;# 
    69     0010                     T1CON           equ	16	;# 
    70     0011                     TMR2            equ	17	;# 
    71     0012                     T2CON           equ	18	;# 
    72     0013                     SSPBUF          equ	19	;# 
    73     0014                     SSPCON          equ	20	;# 
    74     0015                     CCPR1           equ	21	;# 
    75     0015                     CCPR1L          equ	21	;# 
    76     0016                     CCPR1H          equ	22	;# 
    77     0017                     CCP1CON         equ	23	;# 
    78     0018                     RCSTA           equ	24	;# 
    79     0019                     TXREG           equ	25	;# 
    80     001A                     RCREG           equ	26	;# 
    81     001B                     CCPR2           equ	27	;# 
    82     001B                     CCPR2L          equ	27	;# 
    83     001C                     CCPR2H          equ	28	;# 
    84     001D                     CCP2CON         equ	29	;# 
    85     001E                     ADRESH          equ	30	;# 
    86     001F                     ADCON0          equ	31	;# 
    87     0081                     OPTION_REG      equ	129	;# 
    88     0085                     TRISA           equ	133	;# 
    89     0086                     TRISB           equ	134	;# 
    90     0087                     TRISC           equ	135	;# 
    91     0088                     TRISD           equ	136	;# 
    92     0089                     TRISE           equ	137	;# 
    93     008C                     PIE1            equ	140	;# 
    94     008D                     PIE2            equ	141	;# 
    95     008E                     PCON            equ	142	;# 
    96     008F                     OSCCON          equ	143	;# 
    97     0090                     OSCTUNE         equ	144	;# 
    98     0091                     SSPCON2         equ	145	;# 
    99     0092                     PR2             equ	146	;# 
   100     0093                     SSPADD          equ	147	;# 
   101     0093                     SSPMSK          equ	147	;# 
   102     0093                     MSK             equ	147	;# 
   103     0094                     SSPSTAT         equ	148	;# 
   104     0095                     WPUB            equ	149	;# 
   105     0096                     IOCB            equ	150	;# 
   106     0097                     VRCON           equ	151	;# 
   107     0098                     TXSTA           equ	152	;# 
   108     0099                     SPBRG           equ	153	;# 
   109     009A                     SPBRGH          equ	154	;# 
   110     009B                     PWM1CON         equ	155	;# 
   111     009C                     ECCPAS          equ	156	;# 
   112     009D                     PSTRCON         equ	157	;# 
   113     009E                     ADRESL          equ	158	;# 
   114     009F                     ADCON1          equ	159	;# 
   115     0105                     WDTCON          equ	261	;# 
   116     0107                     CM1CON0         equ	263	;# 
   117     0108                     CM2CON0         equ	264	;# 
   118     0109                     CM2CON1         equ	265	;# 
   119     010C                     EEDATA          equ	268	;# 
   120     010C                     EEDAT           equ	268	;# 
   121     010D                     EEADR           equ	269	;# 
   122     010E                     EEDATH          equ	270	;# 
   123     010F                     EEADRH          equ	271	;# 
   124     0185                     SRCON           equ	389	;# 
   125     0187                     BAUDCTL         equ	391	;# 
   126     0188                     ANSEL           equ	392	;# 
   127     0189                     ANSELH          equ	393	;# 
   128     018C                     EECON1          equ	396	;# 
   129     018D                     EECON2          equ	397	;# 
   130     0000                     INDF            equ	0	;# 
   131     0001                     TMR0            equ	1	;# 
   132     0002                     PCL             equ	2	;# 
   133     0003                     STATUS          equ	3	;# 
   134     0004                     FSR             equ	4	;# 
   135     0005                     PORTA           equ	5	;# 
   136     0006                     PORTB           equ	6	;# 
   137     0007                     PORTC           equ	7	;# 
   138     0008                     PORTD           equ	8	;# 
   139     0009                     PORTE           equ	9	;# 
   140     000A                     PCLATH          equ	10	;# 
   141     000B                     INTCON          equ	11	;# 
   142     000C                     PIR1            equ	12	;# 
   143     000D                     PIR2            equ	13	;# 
   144     000E                     TMR1            equ	14	;# 
   145     000E                     TMR1L           equ	14	;# 
   146     000F                     TMR1H           equ	15	;# 
   147     0010                     T1CON           equ	16	;# 
   148     0011                     TMR2            equ	17	;# 
   149     0012                     T2CON           equ	18	;# 
   150     0013                     SSPBUF          equ	19	;# 
   151     0014                     SSPCON          equ	20	;# 
   152     0015                     CCPR1           equ	21	;# 
   153     0015                     CCPR1L          equ	21	;# 
   154     0016                     CCPR1H          equ	22	;# 
   155     0017                     CCP1CON         equ	23	;# 
   156     0018                     RCSTA           equ	24	;# 
   157     0019                     TXREG           equ	25	;# 
   158     001A                     RCREG           equ	26	;# 
   159     001B                     CCPR2           equ	27	;# 
   160     001B                     CCPR2L          equ	27	;# 
   161     001C                     CCPR2H          equ	28	;# 
   162     001D                     CCP2CON         equ	29	;# 
   163     001E                     ADRESH          equ	30	;# 
   164     001F                     ADCON0          equ	31	;# 
   165     0081                     OPTION_REG      equ	129	;# 
   166     0085                     TRISA           equ	133	;# 
   167     0086                     TRISB           equ	134	;# 
   168     0087                     TRISC           equ	135	;# 
   169     0088                     TRISD           equ	136	;# 
   170     0089                     TRISE           equ	137	;# 
   171     008C                     PIE1            equ	140	;# 
   172     008D                     PIE2            equ	141	;# 
   173     008E                     PCON            equ	142	;# 
   174     008F                     OSCCON          equ	143	;# 
   175     0090                     OSCTUNE         equ	144	;# 
   176     0091                     SSPCON2         equ	145	;# 
   177     0092                     PR2             equ	146	;# 
   178     0093                     SSPADD          equ	147	;# 
   179     0093                     SSPMSK          equ	147	;# 
   180     0093                     MSK             equ	147	;# 
   181     0094                     SSPSTAT         equ	148	;# 
   182     0095                     WPUB            equ	149	;# 
   183     0096                     IOCB            equ	150	;# 
   184     0097                     VRCON           equ	151	;# 
   185     0098                     TXSTA           equ	152	;# 
   186     0099                     SPBRG           equ	153	;# 
   187     009A                     SPBRGH          equ	154	;# 
   188     009B                     PWM1CON         equ	155	;# 
   189     009C                     ECCPAS          equ	156	;# 
   190     009D                     PSTRCON         equ	157	;# 
   191     009E                     ADRESL          equ	158	;# 
   192     009F                     ADCON1          equ	159	;# 
   193     0105                     WDTCON          equ	261	;# 
   194     0107                     CM1CON0         equ	263	;# 
   195     0108                     CM2CON0         equ	264	;# 
   196     0109                     CM2CON1         equ	265	;# 
   197     010C                     EEDATA          equ	268	;# 
   198     010C                     EEDAT           equ	268	;# 
   199     010D                     EEADR           equ	269	;# 
   200     010E                     EEDATH          equ	270	;# 
   201     010F                     EEADRH          equ	271	;# 
   202     0185                     SRCON           equ	389	;# 
   203     0187                     BAUDCTL         equ	391	;# 
   204     0188                     ANSEL           equ	392	;# 
   205     0189                     ANSELH          equ	393	;# 
   206     018C                     EECON1          equ	396	;# 
   207     018D                     EECON2          equ	397	;# 
   208     001D                     _CCP2CONbits    set	29
   209     001B                     _CCPR2L         set	27
   210     001D                     _CCP2CON        set	29
   211     0012                     _T2CON          set	18
   212     0007                     _PORTC          set	7
   213     001E                     _ADRESH         set	30
   214     001F                     _ADCON0bits     set	31
   215     0092                     _PR2            set	146
   216     0087                     _TRISC          set	135
   217     009E                     _ADRESL         set	158
   218     009F                     _ADCON1bits     set	159
   219                           
   220                           	psect	cinit
   221     07FC                     start_initialization:	
   222                           ; #config settings
   223                           
   224     07FC                     __initialization:
   225     07FC                     end_of_initialization:	
   226                           ;End of C runtime variable initialization code
   227                           
   228     07FC                     __end_of__initialization:
   229     07FC  0183               	clrf	3
   230     07FD  120A  118A  2FBE   	ljmp	_main	;jump to C main() function
   231                           
   232                           	psect	cstackCOMMON
   233     0070                     __pcstackCOMMON:
   234     0070                     ?_main:
   235     0070                     ?_ADC_Read:	
   236                           ; 1 bytes @ 0x0
   237                           
   238                           
   239                           ; 2 bytes @ 0x0
   240     0070                     	ds	2
   241     0072                     ??_ADC_Read:
   242                           
   243                           ; 1 bytes @ 0x2
   244     0072                     	ds	1
   245     0073                     ??_main:
   246                           
   247                           ; 1 bytes @ 0x3
   248     0073                     	ds	2
   249     0075                     main@ADCResult:
   250                           
   251                           ; 2 bytes @ 0x5
   252     0075                     	ds	2
   253                           
   254                           	psect	maintext
   255     07BE                     __pmaintext:	
   256 ;;
   257 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   258 ;;
   259 ;; *************** function _main *****************
   260 ;; Defined at:
   261 ;;		line 29 in file "Exp14.c"
   262 ;; Parameters:    Size  Location     Type
   263 ;;		None
   264 ;; Auto vars:     Size  Location     Type
   265 ;;  ADCResult       2    5[COMMON] unsigned short 
   266 ;; Return value:  Size  Location     Type
   267 ;;                  1    wreg      void 
   268 ;; Registers used:
   269 ;;		wreg, status,2, status,0, pclath, cstack
   270 ;; Tracked objects:
   271 ;;		On entry : B00/0
   272 ;;		On exit  : 0/0
   273 ;;		Unchanged: 0/0
   274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   275 ;;      Params:         0       0       0       0       0
   276 ;;      Locals:         2       0       0       0       0
   277 ;;      Temps:          2       0       0       0       0
   278 ;;      Totals:         4       0       0       0       0
   279 ;;Total ram usage:        4 bytes
   280 ;; Hardware stack levels required when called: 1
   281 ;; This function calls:
   282 ;;		_ADC_Read
   283 ;; This function is called by:
   284 ;;		Startup code after reset
   285 ;; This function uses a non-reentrant model
   286 ;;
   287                           
   288     07BE                     _main:	
   289                           ;psect for function _main
   290                           
   291     07BE                     l626:	
   292                           ;incstack = 0
   293                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   294                           
   295                           
   296                           ;Exp14.c: 31:     unsigned short ADCResult;;Exp14.c: 33:     TRISC = 0b00000000;
   297     07BE  1683               	bsf	3,5	;RP0=1, select bank1
   298     07BF  1303               	bcf	3,6	;RP1=0, select bank1
   299     07C0  0187               	clrf	7	;volatile
   300                           
   301                           ;Exp14.c: 34:     PORTC = 0b00000000;
   302     07C1  1283               	bcf	3,5	;RP0=0, select bank0
   303     07C2  1303               	bcf	3,6	;RP1=0, select bank0
   304     07C3  0187               	clrf	7	;volatile
   305     07C4                     l628:
   306                           
   307                           ;Exp14.c: 39:     PR2 = 0x3F;
   308     07C4  303F               	movlw	63
   309     07C5  1683               	bsf	3,5	;RP0=1, select bank1
   310     07C6  1303               	bcf	3,6	;RP1=0, select bank1
   311     07C7  0092               	movwf	18	;volatile
   312     07C8                     l630:
   313                           
   314                           ;Exp14.c: 45:     T2CON = 0b00000100;
   315     07C8  3004               	movlw	4
   316     07C9  1283               	bcf	3,5	;RP0=0, select bank0
   317     07CA  1303               	bcf	3,6	;RP1=0, select bank0
   318     07CB  0092               	movwf	18	;volatile
   319     07CC                     l632:
   320                           
   321                           ;Exp14.c: 52:     CCP2CON = 0x0F;
   322     07CC  300F               	movlw	15
   323     07CD  009D               	movwf	29	;volatile
   324     07CE                     l634:
   325                           
   326                           ;Exp14.c: 55:         ADCResult = ADC_Read();
   327     07CE  120A  118A  279E  120A  118A  	fcall	_ADC_Read
   328     07D3  0871               	movf	?_ADC_Read+1,w
   329     07D4  00F6               	movwf	main@ADCResult+1
   330     07D5  0870               	movf	?_ADC_Read,w
   331     07D6  00F5               	movwf	main@ADCResult
   332     07D7                     l636:
   333                           
   334                           ;Exp14.c: 56:         CCPR2L = (ADCResult >> 2);
   335     07D7  0876               	movf	main@ADCResult+1,w
   336     07D8  00F4               	movwf	??_main+1
   337     07D9  0875               	movf	main@ADCResult,w
   338     07DA  00F3               	movwf	??_main
   339     07DB  1003               	clrc
   340     07DC  0CF4               	rrf	??_main+1,f
   341     07DD  0CF3               	rrf	??_main,f
   342     07DE  1003               	clrc
   343     07DF  0CF4               	rrf	??_main+1,f
   344     07E0  0CF3               	rrf	??_main,f
   345     07E1  0873               	movf	??_main,w
   346     07E2  1283               	bcf	3,5	;RP0=0, select bank0
   347     07E3  1303               	bcf	3,6	;RP1=0, select bank0
   348     07E4  009B               	movwf	27	;volatile
   349     07E5                     l638:
   350                           
   351                           ;Exp14.c: 57:         CCP2CONbits.CCP2Y = ADCResult & 0x01;
   352     07E5  0875               	movf	main@ADCResult,w
   353     07E6  3901               	andlw	1
   354     07E7  00F3               	movwf	??_main
   355     07E8  0EF3               	swapf	??_main,f
   356     07E9  081D               	movf	29,w	;volatile
   357     07EA  0673               	xorwf	??_main,w
   358     07EB  39EF               	andlw	-17
   359     07EC  0673               	xorwf	??_main,w
   360     07ED  009D               	movwf	29	;volatile
   361     07EE                     l640:
   362                           
   363                           ;Exp14.c: 58:         CCP2CONbits.CCP2X = ADCResult & 0x02;
   364     07EE  0875               	movf	main@ADCResult,w
   365     07EF  3902               	andlw	2
   366     07F0  00F3               	movwf	??_main
   367     07F1  0EF3               	swapf	??_main,f
   368     07F2  0DF3               	rlf	??_main,f
   369     07F3  081D               	movf	29,w	;volatile
   370     07F4  0673               	xorwf	??_main,w
   371     07F5  39DF               	andlw	-33
   372     07F6  0673               	xorwf	??_main,w
   373     07F7  009D               	movwf	29	;volatile
   374     07F8  2FCE               	goto	l634
   375     07F9  120A  118A  2800   	ljmp	start
   376     07FC                     __end_of_main:
   377                           
   378                           	psect	text1
   379     079E                     __ptext1:	
   380 ;; *************** function _ADC_Read *****************
   381 ;; Defined at:
   382 ;;		line 10 in file "Exp14.c"
   383 ;; Parameters:    Size  Location     Type
   384 ;;		None
   385 ;; Auto vars:     Size  Location     Type
   386 ;;		None
   387 ;; Return value:  Size  Location     Type
   388 ;;                  2    0[COMMON] unsigned int 
   389 ;; Registers used:
   390 ;;		wreg, status,2, status,0
   391 ;; Tracked objects:
   392 ;;		On entry : 0/0
   393 ;;		On exit  : 0/0
   394 ;;		Unchanged: 0/0
   395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   396 ;;      Params:         2       0       0       0       0
   397 ;;      Locals:         0       0       0       0       0
   398 ;;      Temps:          1       0       0       0       0
   399 ;;      Totals:         3       0       0       0       0
   400 ;;Total ram usage:        3 bytes
   401 ;; Hardware stack levels used: 1
   402 ;; This function calls:
   403 ;;		Nothing
   404 ;; This function is called by:
   405 ;;		_main
   406 ;; This function uses a non-reentrant model
   407 ;;
   408                           
   409     079E                     _ADC_Read:	
   410                           ;psect for function _ADC_Read
   411                           
   412     079E                     l612:	
   413                           ;incstack = 0
   414                           ; Regs used in _ADC_Read: [wreg+status,2+status,0]
   415                           
   416                           
   417                           ;Exp14.c: 12:     ADCON0bits.ADCS = 0;
   418     079E  303F               	movlw	-193
   419     079F  1283               	bcf	3,5	;RP0=0, select bank0
   420     07A0  1303               	bcf	3,6	;RP1=0, select bank0
   421     07A1  059F               	andwf	31,f	;volatile
   422     07A2                     l614:
   423                           
   424                           ;Exp14.c: 14:     ADCON1bits.ADFM = 1;
   425     07A2  1683               	bsf	3,5	;RP0=1, select bank1
   426     07A3  1303               	bcf	3,6	;RP1=0, select bank1
   427     07A4  179F               	bsf	31,7	;volatile
   428     07A5                     l616:
   429                           
   430                           ;Exp14.c: 16:     ADCON0bits.ADON = 1;
   431     07A5  1283               	bcf	3,5	;RP0=0, select bank0
   432     07A6  1303               	bcf	3,6	;RP1=0, select bank0
   433     07A7  141F               	bsf	31,0	;volatile
   434                           
   435                           ;Exp14.c: 19:     ADCON0bits.CHS = 0b011;
   436     07A8  081F               	movf	31,w	;volatile
   437     07A9  39C3               	andlw	-61
   438     07AA  380C               	iorlw	12
   439     07AB  009F               	movwf	31	;volatile
   440     07AC                     l618:
   441                           
   442                           ;Exp14.c: 21:     _delay((unsigned long)((25)*(4000000/4000000.0)));
   443     07AC  3008               	movlw	8
   444     07AD  00F2               	movwf	??_ADC_Read
   445     07AE                     u37:
   446     07AE  0BF2               	decfsz	??_ADC_Read,f
   447     07AF  2FAE               	goto	u37
   448     07B0                     l620:
   449                           
   450                           ;Exp14.c: 22:     ADCON0bits.GO = 1;
   451     07B0  1283               	bcf	3,5	;RP0=0, select bank0
   452     07B1  1303               	bcf	3,6	;RP1=0, select bank0
   453     07B2  149F               	bsf	31,1	;volatile
   454     07B3                     l27:	
   455                           ;Exp14.c: 24:     while (ADCON0bits.nDONE) continue;
   456                           
   457     07B3  189F               	btfsc	31,1	;volatile
   458     07B4  2FB6               	goto	u21
   459     07B5  2FB7               	goto	u20
   460     07B6                     u21:
   461     07B6  2FB3               	goto	l27
   462     07B7                     u20:
   463     07B7                     l622:
   464                           
   465                           ;Exp14.c: 25:     return ((int)ADRESH << 8) | ADRESL;
   466     07B7  081E               	movf	30,w	;volatile
   467     07B8  00F1               	movwf	?_ADC_Read+1
   468     07B9  1683               	bsf	3,5	;RP0=1, select bank1
   469     07BA  1303               	bcf	3,6	;RP1=0, select bank1
   470     07BB  081E               	movf	30,w	;volatile
   471     07BC  00F0               	movwf	?_ADC_Read
   472     07BD                     l30:
   473     07BD  0008               	return
   474     07BE                     __end_of_ADC_Read:
   475     0002                     ___latbits      equ	2
   476     007E                     btemp           set	126	;btemp
   477     007E                     wtemp0          set	126

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_ADC_Read

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0      67
                                              3 COMMON     4     4      0
                           _ADC_Read
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             3     1      2       0
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Read

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            96      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              14      7       7     50.0%
BANK0               80      0       0      0.0%
BANK1               80      0       0      0.0%
BANK3               96      0       0      0.0%
BANK2               96      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0       7      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Sat Apr 19 17:41:44 2025

                     l30 07BD                       l27 07B3                       u20 07B7  
                     u21 07B6                       u37 07AE                      l620 07B0  
                    l612 079E                      l622 07B7                      l614 07A2  
                    l630 07C8                      l616 07A5                      l640 07EE  
                    l632 07CC                      l618 07AC                      l634 07CE  
                    l626 07BE                      l636 07D7                      l628 07C4  
                    l638 07E5                      _PR2 0092                     _main 07BE  
                   btemp 007E         __end_of_ADC_Read 07BE                     start 0000  
                  ?_main 0070                    _T2CON 0012                    _PORTC 0007  
                  _TRISC 0087                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_main 07FC                   ??_main 0073  
                 _ADRESH 001E                   _ADRESL 009E                   _CCPR2L 001B  
              ?_ADC_Read 0070  __end_of__initialization 07FC           __pcstackCOMMON 0070  
             ??_ADC_Read 0072               __pmaintext 07BE                  _CCP2CON 001D  
                __ptext1 079E     end_of_initialization 07FC              _CCP2CONbits 001D  
    start_initialization 07FC                ___latbits 0002                 _ADC_Read 079E  
             _ADCON0bits 001F               _ADCON1bits 009F            main@ADCResult 0075  
